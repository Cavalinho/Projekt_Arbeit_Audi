

  <div class="content-wrapper">
    <div class="container-fluid">
    <!-- Navigation Ende-->
     <!-- Breadcrumbs-->
       <ol class="breadcrumb">
         Shopfloor
      </ol>
      <!-- Breadcrumbs Ende-->
      <!-- Icon Cards-->


      <!-- KPI_Graph = viewport -> sb-admin-chart.js.erb KPI_CSS -> bootstrap.css -->
      <div class="card card-outline-primary mb-3 text-center">
        <div class="card-header">
          <i class="fa fa-area-chart"></i> Shopfloor
        </div>
      	<div class="card-body">
    			<div class="Shopfloor" >
            <% @labels.each do |label| %>
              <div class="tooltip point" style="top:<%= random_y %>px;left:<%= random_x %>px;">o
                <span class="tooltiptext"><%= label %></span>
              </div>
            <% end %>
           </div>
     		</div>
      </div>
    </div>
  </div>






<script>

	var canvas = document.getElementById('canvas');
	var ctx = canvas.getContext('2d');
    var color = Chart.helpers.color;
    var myChart = new Chart(ctx, {


    type: 'scatter',



    data: {
    	// LABEL AUS PRODUCT_CONTROLLER.RB print(array) ZEIGT ALLE VORHABEN
      labels1: ['Hallo', 'bonjour', 'salut'],
        datasets: [{
          label: 'Legend',
        	 borderColor: window.chartColors.black,
            backgroundColor: color(window.chartColors.black).alpha(0.9).rgbString(),

            data: [{


               // ANZAHL PUNKTE JE NACH FUNKTION generateZahl   x: [generateZahl] y: [generateZahl]
               // LABEL ZEIGT ALLE VORHABEN

                x: generateZahl(), y: generateZahl(),
                },

                {

                x: generateZahl(), y: generateZahl(),
                },

                {

                x: generateZahl(), y: generateZahl(),
                },

                {

                x: generateZahl(), y: generateZahl(),
                }

            ]

        }]
    },


    options: {


        scales: {
                    xAxes: [{
                            data: generateZahl(),
                            display: false,
                            ticks: {
                                beginAtZero: true,
                                min: -10,
                                max: 100,
                            	maxTicksLimit: 10

                            }
                        }],
                    yAxes: [{
                            data: generateZahl(),
                            display: false,
                            ticks: {
                                beginAtZero: true,
                                max: 100,
                            	min: 0
                            }
                        }]
    				},

    				legend: {
            display: false
        },

    tooltips: {
         callbacks: {
            label: function(tooltipItem, data ) {
               var label = data.labels1[tooltipItem.index];
               return label;
            }
         }
      },

    },






});

// 8 Zahlen zuf√§llig zwische 1- 100
function randomInt(min, max) {
    return Math.round(min + Math.random()*(max-min));
};

function generateZahl () {

var arr = [];
// ANSTATT <1   AUS PRODUCT_CONTROLLER.RB @tunichtvorhanden.count
while(arr.length < 3){
    var randomnumber = randomInt(1,100);
    if(arr.indexOf(randomnumber) > -1) continue;
    arr[arr.length] = randomnumber;

   };
        return arr;

}






</script>




